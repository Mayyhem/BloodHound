parameters:
  - $ref: './../../parameters/header/prefer.yaml'
get:
  operationId: ListAuditLogs
  summary: List audit logs
  description: Returns a list of audit logs.
  tags:
    - Audit API
    - Community
    - Enterprise
  parameters:
    - $ref: './../../parameters/query/skip.yaml'
    - $ref: './../../parameters/query/limit.yaml'
    - $ref: './../../parameters/query/created-at.yaml'
    - name: sort_by
      description: >
        Sortable columns are `id`, `actor_id`, `actor_name`, `actor_email`,
        `action`, `request_id`, `created_at`, `source`, and `status`.
      in: query
      schema:
        $ref: './../../schemas/api/params/predicate/sort-by.yaml'
    - name: before
      description: Return logs created before the specified time. Value should be
        in the RFC-3339 format. If not supplied, this will default to
        the current time.
      in: query
      schema:
        type: string
        format: date-time
    - name: after
      description: Return logs created after the specified time. Value should be in
        the RFC-3339 format. If not supplied, this will default to 1
        year before the current time.
      in: query
      schema:
        type: string
        format: date-time
    - name: id
      in: query
      schema:
        $ref: './../../schemas/api/params/predicate/filter.string.yaml'
    - name: actor_id
      in: query
      schema:
        $ref: './../../schemas/api/params/predicate/filter.string.yaml'
    - name: actor_name
      in: query
      schema:
        $ref: './../../schemas/api/params/predicate/filter.string.yaml'
    - name: actor_email
      in: query
      schema:
        $ref: './../../schemas/api/params/predicate/filter.string.yaml'
    - name: action
      in: query
      schema:
        $ref: './../../schemas/api/params/predicate/filter.string.yaml'
    - name: request_id
      in: query
      schema:
        $ref: './../../schemas/api/params/predicate/filter.string.yaml'
    - name: source
      in: query
      schema:
        $ref: './../../schemas/api/params/predicate/filter.string.yaml'
    - name: status
      description: Filter results by column value. Valid filter predicates are `eq`,
        `neq`. Valid values are `success` and `failure`.
      in: query
      schema:
        # this might be suitable for a pattern match
        $ref: './../../schemas/api/params/predicate/filter.string.yaml'
  responses:
    200:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  logs:
                    type: array
                    items:
                      $ref: './../../schemas/model/audit-log.yaml'
    400:
      $ref: './../../responses/bad-request.yaml'
    401:
      $ref: './../../responses/unauthorized.yaml'
    403:
      $ref: './../../responses/forbidden.yaml'
    429:
      $ref: './../../responses/too-many-requests.yaml'
    500:
      $ref: './../../responses/internal-server-error.yaml'
