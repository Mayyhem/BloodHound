parameters:
  - $ref: './../../parameters/header/prefer.yaml'
  - name: user_id
    description: User ID
    in: path
    required: true
    schema:
      type: string
      format: uuid
put:
  operationId: CreateOrSetUserSecret
  summary: Create or Set User Secret
  description: Create or set a user's secret to use as a login password.
  tags:
    - User Management API
    - Community
    - Enterprise
  requestBody:
    description: The request body for creating or setting a user secret
    required: true
    content:
      application/json:
        schema:
          $ref: './../../schemas/api/requests/user.set-secret.yaml'
  responses:
    200:
      description: OK
    400:
      $ref: './../../responses/api/bad-request.yaml'
    401:
      $ref: './../../responses/api/unauthorized.yaml'
    403:
      $ref: './../../responses/api/forbidden.yaml'
    404:
      $ref: './../../responses/api/not-found.yaml'
    429:
      $ref: './../../responses/api/too-many-requests.yaml'
    500:
      $ref: './../../responses/api/internal-server-error.yaml'

delete:
  operationId: DeleteUserSecret
  summary: Expire User Secret
  description: Expire a user's secret to use as a login password.
  tags:
    - User Management API
    - Community
    - Enterprise
  responses:
    200:
      description: OK
    400:
      $ref: './../../responses/api/bad-request.yaml'
    401:
      $ref: './../../responses/api/unauthorized.yaml'
    403:
      $ref: './../../responses/api/forbidden.yaml'
    404:
      $ref: './../../responses/api/not-found.yaml'
    429:
      $ref: './../../responses/api/too-many-requests.yaml'
    500:
      $ref: './../../responses/api/internal-server-error.yaml'
